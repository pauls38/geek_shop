{"ast":null,"code":"import _toConsumableArray from \"D:/GeekBrains/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 geekbrains/Agile practic/\\u0421\\u043E\\u0432\\u043C\\u0435\\u0441\\u0442\\u043D\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442-\\u0441\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/\\u0421\\u043E\\u0432\\u043C\\u0435\\u0441\\u0442\\u043D\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442-\\u0441\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 cart/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    catalog: [{}],\n    cart: [],\n    category: [],\n    preView: [],\n    imageUrl: 'http://svalka-back.im56.ru/'\n  },\n  getters: {\n    getCatalog: function getCatalog(state) {\n      return _toConsumableArray(state.catalog);\n    },\n    getCategory: function getCategory(state) {\n      return _toConsumableArray(state.category);\n    },\n    getCart: function getCart(state) {\n      return _toConsumableArray(state.cart);\n    },\n    //getPreView: (state) = [...state.catalog],    \n    getCartCount: function getCartCount(state) {\n      return state.cart.reduce(function (acc, item) {\n        return acc + item.quantity;\n      }, 0);\n    }\n  },\n  mutations: {\n    setCatalog: function setCatalog(state, catalog) {\n      state.catalog = catalog;\n    },\n    // setCatalog: (state, catalog) => {console.log(state)},\n    setCart: function setCart(state, cart) {\n      state.cart = cart;\n    },\n    setCategory: function setCategory(state, category) {\n      state.category = category;\n    },\n    preView: function preView(state, catalog) {\n      state.preView = catalog;\n      alert('test');\n    },\n    addToCart: function addToCart(state, product) {\n      var existProduct = state.cart.find(function (item) {\n        return item.id === product.id;\n      }); // console.log(product);\n\n      if (existProduct) {\n        existProduct.quantity++;\n      } else {\n        state.cart.push(Object.assign({\n          quantity: 1\n        }, product));\n      }\n    },\n    removeFromCart: function removeFromCart(state, id) {\n      var idx = state.cart.findIndex(function (item) {\n        return item.id === id;\n      });\n      state.cart.splice(idx, 1);\n    },\n    setQuantity: function setQuantity(state, _ref) {\n      var id = _ref.id,\n          quantity = _ref.quantity;\n      var product = state.cart.find(function (item) {\n        return item.id === id;\n      });\n      product.quantity = quantity;\n    }\n  },\n  actions: {\n    loadCatalog: function loadCatalog(_ref2) {\n      var commit = _ref2.commit;\n      // return fetch('https://jsonplaceholder.typicode.com/photos?_limit=10')\n      return fetch('http://svalka-back.im56.ru/api/products').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // console.log(data);\n        commit('setCatalog', data);\n      });\n    },\n    loadCatalogCategory: function loadCatalogCategory(_ref3) {\n      var commit = _ref3.commit;\n      return fetch('http://svalka-back.im56.ru/api/categories').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        //console.log(data);\n        commit('setCategory', data);\n      });\n    },\n    loadCart: function loadCart(_ref4) {\n      var commit = _ref4.commit;\n      return fetch(\"/api/v1/cart\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        commit('setCart', data);\n      });\n    },\n    addToCart: function addToCart(_ref5, product) {\n      var commit = _ref5.commit;\n      return fetch(\"/api/v1/cart\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(product)\n      }).then(function () {\n        commit('addToCart', product);\n      });\n    },\n    preView: function preView(_ref6, product) {\n      var commit = _ref6.commit;\n      return fetch(\"/api/v1/preView\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(product)\n      }).then(function () {\n        commit('preView', product);\n      });\n    },\n    setQuantity: function setQuantity(_ref7, _ref8) {\n      var commit = _ref7.commit;\n      var id = _ref8.id,\n          quantity = _ref8.quantity;\n      return fetch(\"/api/v1/cart/\".concat(id), {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          quantity: quantity\n        })\n      }).then(function () {\n        commit('setQuantity', {\n          id: id,\n          quantity: quantity\n        });\n      });\n    },\n    removeFromCart: function removeFromCart(_ref9, id) {\n      var commit = _ref9.commit;\n      return fetch(\"/api/v1/cart/\".concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function () {\n        commit('removeFromCart', id);\n      });\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}